body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,button,textarea,p,blockquote,th,td{margin:0;padding:0;}table{border-collapse:collapse;border-spacing:0;}fieldset,img,a img{border:none;}address,caption,cite,code,dfn,em,strong,th,var,optgroup{font-style:inherit;font-weight:inherit;}del,ins{text-decoration:none;}li{list-style:none;}caption,th{text-align:left;}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal;}q:before,q:after{content:'';}abbr,acronym{border:0;font-variant:normal;}sup{vertical-align:baseline;}sub{vertical-align:baseline;}legend{color:#000;}

primary-color = #6fcc04;
primary-color-alt = #3e9f58;
secondary-color = #94cdec;
tertiary-color = #e1b253;

error-color = #ca3939;

light-color = #f8f8f8;
dark-color = #333;

light-stripe = repeating-linear-gradient(120deg, transparent, transparent 1em, rgba(255, 255, 255, 0.2) 1em, rgba(255, 255, 255, 0.2) 2em);
dark-stripe = repeating-linear-gradient(120deg, transparent, transparent 1em, rgba(0, 0, 0, 0.1) 1em, rgba(0, 0, 0, 0.1) 2em);

@require '../node_modules/font-awesome/css/font-awesome.css';

cy-tooltip-background-color = dark-color;
cy-tooltip-border-color = dark-color;
@require '../node_modules/@cypress/react-tooltip/dist/tooltip';

* {
  box-sizing: border-box;
}

html,
body {
  background: #e6e6e6;
  width: 100%;
  height: 100%;
}

body {
  color: #333;
  display: flex;
}

// achieves vertical centering of all content
// while still being able scroll if there's overflow
.app {
  margin: auto;
  min-width: 32em;
  max-width: 50em;
  width: 100%;
}

body,
input,
textarea {
  font-family: 'Helvetica Neue', Arial, sans-serif;
}

h2 {
  font-size: 1.2em;
  margin: 0.2em 0;
}

p {
  margin: 0.6em 0;
}

input,
textarea {
  border: solid 1px darken(light-color, 20%);
  border-radius: 3px;
  font-size: 1em;
  padding: 0.2em 0.4em;
}

button,
.button {
  border: none;
  background: primary-color-alt;
  border-radius: 3px;
  color: light-color;
  cursor: pointer;
  font-size: 0.8em;
  outline: none;
  padding: 0.5em 0.8em;
  text-decoration: none;

  &:hover {
    background: darken(primary-color-alt, 10%);
  }

  &[disabled],
  &[disabled]:hover {
    background: primary-color-alt !important;
    cursor: default !important;
    opacity: 0.6 !important;
  }

  i {
    margin-right: 0.4em;
  }
}

.inverse {
  background: none;
  color: darken(light-color, 20%);

  &:hover {
    background: none;
    color: darken(light-color, 40%);
  }
}

h2, h3 {
  position: relative;
  white-space: nowrap;

  .controls {
    display: none;
    flex-direction: column;
    position: absolute;
    right: 100%;
    top: 0;
  }

  button {
    @extend .inverse;
    font-size: 13px;
    padding: 0.1em;
  }

  .sort-handle {
    @extend .inverse;
    cursor: grab;
    margin-top: 3px;

    i {
      margin-left: 3px;
    }
  }
}

section {
  background: light-color;
  border-right: solid 1px #d2d2d2;
  border-bottom: solid 1px #d2d2d2;
  border-radius: 5px;
  margin-bottom: 0.8em;
  padding: 1.2em 2em;
}

.savings,
.i-bonds,
.checking,
.income,
.rewards,
.goal {
  header {
    align-items: center;
    display: flex;
  }

  p {
    color: #777;
    font-size: 0.8em;
    margin: 0;
    margin-left: 0.4em;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .spacer {
    flex-grow: 2;
  }

  .projection {
    flex-shrink: 0;

    i {
      margin-right: 0.5em;
    }
  }

  &:hover .controls {
    display: flex;
  }
}

.rewards,
.savings,
.i-bonds,
.checking,
.income {
  .controls {
    top: 3px;
  }
}

h2 button {
  top: 3px;
}

form {
  .group {
    align-items: center;
    display: flex;
    margin: 0.5em 0;
  }

  label {
    color: #666;
    flex-shrink: 0;
    line-height: 1.4;
    margin-right: 0.5em;
    text-align: right;
    width: 5.5em;
  }

  input,
  textarea {
    flex-shrink: 0;
    width: 14em;
  }

  input[type=checkbox] {
    width: auto;
  }

  .limits {
    color: #999;
    display: flex;
    flex-direction: column;
    font-size: 0.7em;
    margin-left: 0.3em;

    span {
      white-space: nowrap;
    }
  }

  .controls {
    border-top: solid 1px #c7c7c7;
    justify-content: space-between;
    margin-top: 1em;
    padding-top: 1em;
  }

  .delete {
    background: error-color;

    &:hover {
      background: darken(error-color, 20%);
    }
  }
}

full-screen() {
  bottom: 0;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
}

.modal {
  full-screen();
  align-items: center;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  opacity: 0.01;
  overflow: hidden;
  transition: all 0.5s ease;
  width: auto;
  z-index: -1;

  .has-entered & {
    opacity: 1;
    z-index: 100;
  }

  .modal-container {
    background: light-color;
    border-radius: 5px;
    flex-basis: 0;
    padding: 1em 1.5em;
  }
}

.loader {
  full-screen();
  align-items: center;
  display: flex;
  justify-content: center;

  i {
    font-size: 1.4em;
    margin-right: 0.5em;
  }
}

spinner-color(color) {
  border-top: 0.2em solid rgba(color, 0.2);
  border-right: 0.2em solid rgba(color, 0.2);
  border-bottom: 0.2em solid rgba(color, 0.2);
  border-left: 0.2em solid rgba(color, 0.8);
}

/* Credit: https://projects.lukehaas.me/css-loaders/ */
.spinner,
.spinner:after {
  border-radius: 50%;
  display: block;
  margin-right: 1em;
  width: 1.2em;
  height: 1.2em;
}

.spinner {
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  spinner-color(dark-color);
  transform: translateZ(0);
  animation: spin 1.5s infinite linear;
}

.theme-dark .spinner {
  spinner-color(light-color);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.auth {
  full-screen();
  background: light-color;
  align-items: center;
  display: flex;
  justify-content: center;

  form {
    width: 20em;
  }

  h2 {
    background: primary-color-alt;
    color: light-color;
    margin: 0;
    padding: 0.5em 0.8em;
  }

  input {
    border-radius: 0;
    padding: 0.6em;
    width: 100%;
  }
}

.container {
  padding: 1.5em;

  &.is-grabbing,
  &.is-sorting {
    cursor: grabbing;
  }
}

.refresh {
  display: none;
  margin-bottom: 1em;

  &.is-connected {
    display: block;
  }

  button, label, .alert {
    display: inline-block;
  }

  label {
    color: #999;
    font-size: 0.8em;
    margin-left: 0.6em;
  }

  .alert {
    background: #b80000;
    border-radius: 3px;
    color: white;
    font-size: 0.8em;
    margin-left: 0.6em;
    padding: 0.5em 0.8em;
  }
}

bar-height = 0.6em;

.bar {
  align-items: flex-end;
  display: flex;
  margin: 0.2em 0 0.4em;

  > main {
    background: #ebebeb;
    display: flex;
    flex-grow: 2;
    height: bar-height;
  }

  .bar-part {
    flex-shrink: 0;
    position: relative;
    text-align: right;

    &.savings {
      background: primary-color;

      &:hover .drag-handle,
      &.is-dragging .drag-handle,
      .drag-handle:hover {
        background: darken(primary-color, 20%);
      }
    }

    &.i-bonds-unavailable {
      background: lighten(dark-color, 40%);
    }

    &.i-bonds-allocated {
      background: primary-color-alt;

      &:hover .drag-handle,
      &.is-dragging .drag-handle,
      .drag-handle:hover {
        background: darken(primary-color-alt, 20%);
      }
    }

    &.planned {
      background: secondary-color;

      &:hover .drag-handle,
      &.is-dragging .drag-handle,
      .drag-handle:hover {
        background: darken(secondary-color, 20%);
      }
    }

    &.expense {
      background: tertiary-color;

      &:hover .drag-handle,
      &.is-dragging .drag-handle,
      .drag-handle:hover {
        background: darken(tertiary-color, 20%);
      }
    }

    &.left {
      box-shadow: 0 0 3px rgba(0, 0, 0, 0.2) inset;
    }

    .tooltip-target {
      bottom: 0;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
    }

    .drag-handle {
      top: 0;
      cursor: grab;
      position: absolute;
      right: 0;
      width: 5px;
      height: bar-height;
      z-index: 1;
    }

    &.planned.is-zero .drag-handle {
      right: -5px;
    }

    &:hover .drag-handle,
    &.is-dragging .drag-handle {
      height: bar-height + 0.6em;
      top: -0.3em;
    }
  }

  .total {
    flex-shrink: 0;
    text-align: right;
    width: 4.4em;

    input {
      display: block;
      font-size: 0.8em;
      margin-left: 0.4em;
      outline: none;
      width: 100%;
    }
  }
}

.tooltip label span {
  color: darken(light-color, 10%);
  margin-left: 0.2em;
}

article.checking,
article.rewards,
article.savings,
article.i-bonds,
article.income {
  margin-bottom: 1em;
}

.rewards {
  h2 {
    margin-bottom: 0.6em;
  }

  ul {
    display: flex;
    justify-content: space-between;
  }

  li {
    text-align: center;
  }

  h3 {
    margin-bottom: 0.6em;
  }

  .amex i { color: #0068d5; }
  .citiMc i { color: #ff4600; }
  .citiVisa i { color: #1e156a; }
  .discover i { color: #f77400; }

  div {
    color: #666;
  }

  @media screen and (min-width: 650px) {
    li {
      display: flex;
    }

    h3 {
      margin-right: 0.4em;

      &:after {
        content: ':';
      }
    }
  }
}

.i-bonds .bar-part.i-bonds-unavailable,
.i-bonds .bar-part.i-bonds-allocated {
  background-image: light-stripe;
}

.checking .bar main,
.income .bar-part.planned,
.savings .bar-part.savings {
  background-image: dark-stripe;
}

.add-goal {
  margin-top: 1em;
}

.is-sorting .goal .controls {
  display: none;
}

.goal {
  margin: 1em 0;

  &.sorting-helper .controls {
    display: flex;
  }
}

.editor {
  .modal-container {
    position: relative;
    padding: 3em 3em 0.8em;
  }

  .close {
    @extend .inverse;
    font-size: 1.4em;
    padding: 0.5em;
    position: absolute;
    right: 0;
    top: 0;

    i {
      margin-right: 0;
    }
  }
}

.edit-rewards,
.edit-income {
  form label {
    width: 7.5em;
  }
}

.edit-accounts,
.edit-rewards,
.edit-income {
  .controls {
    justify-content: flex-end;
  }
}

.edit-projection {
  label:nth-of-type(2) {
    visibility: hidden;
    width: 4.5em;
  }

  input[type=number] {
    visibility: hidden;
    width: 8.2em;
  }

  &.show-projection-amount {
    label,
    input {
      visibility: visible;
    }
  }
}
